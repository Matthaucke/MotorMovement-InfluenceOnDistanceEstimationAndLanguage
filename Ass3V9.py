# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Ass3V9.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(1360, 927)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        MainWindow.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Calibri"))
        font.setPointSize(14)
        MainWindow.setFont(font)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.stackedWidget = QtGui.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 1351, 881))
        self.stackedWidget.setObjectName(_fromUtf8("stackedWidget"))
        self.page_1 = QtGui.QWidget()
        self.page_1.setObjectName(_fromUtf8("page_1"))
        self.Briefing = QtGui.QTextBrowser(self.page_1)
        self.Briefing.setGeometry(QtCore.QRect(0, 110, 1351, 461))
        self.Briefing.setObjectName(_fromUtf8("Briefing"))
        self.Info = QtGui.QLabel(self.page_1)
        self.Info.setGeometry(QtCore.QRect(320, 600, 781, 81))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Calibri"))
        font.setPointSize(12)
        self.Info.setFont(font)
        self.Info.setObjectName(_fromUtf8("Info"))
        self.CheckYes = QtGui.QRadioButton(self.page_1)
        self.CheckYes.setEnabled(False)
        self.CheckYes.setGeometry(QtCore.QRect(610, 710, 95, 20))
        self.CheckYes.setObjectName(_fromUtf8("CheckYes"))
        self.CheckNo = QtGui.QRadioButton(self.page_1)
        self.CheckNo.setEnabled(False)
        self.CheckNo.setGeometry(QtCore.QRect(770, 710, 95, 20))
        self.CheckNo.setObjectName(_fromUtf8("CheckNo"))
        self.Continue = QtGui.QPushButton(self.page_1)
        self.Continue.setEnabled(False)
        self.Continue.setGeometry(QtCore.QRect(1140, 750, 130, 50))
        self.Continue.setObjectName(_fromUtf8("Continue"))
        self.DontParticipate = QtGui.QWidget(self.page_1)
        self.DontParticipate.setGeometry(QtCore.QRect(1060, 580, 281, 161))
        self.DontParticipate.setObjectName(_fromUtf8("DontParticipate"))
        self.ErrorMessage = QtGui.QLabel(self.DontParticipate)
        self.ErrorMessage.setGeometry(QtCore.QRect(50, 0, 231, 131))
        self.ErrorMessage.setWordWrap(True)
        self.ErrorMessage.setObjectName(_fromUtf8("ErrorMessage"))
        self.LeaveExp = QtGui.QPushButton(self.DontParticipate)
        self.LeaveExp.setGeometry(QtCore.QRect(80, 130, 131, 31))
        self.LeaveExp.setObjectName(_fromUtf8("LeaveExp"))
        self.UCLLogo = QtGui.QLabel(self.page_1)
        self.UCLLogo.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo.setText(_fromUtf8(""))
        self.UCLLogo.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo.setScaledContents(True)
        self.UCLLogo.setObjectName(_fromUtf8("UCLLogo"))
        self.stackedWidget.addWidget(self.page_1)
        self.page_2 = QtGui.QWidget()
        self.page_2.setObjectName(_fromUtf8("page_2"))
        self.ErrorNationality = QtGui.QLabel(self.page_2)
        self.ErrorNationality.setGeometry(QtCore.QRect(700, 430, 351, 31))
        self.ErrorNationality.setObjectName(_fromUtf8("ErrorNationality"))
        self.ErrorGender = QtGui.QLabel(self.page_2)
        self.ErrorGender.setGeometry(QtCore.QRect(700, 290, 271, 41))
        self.ErrorGender.setObjectName(_fromUtf8("ErrorGender"))
        self.Degree = QtGui.QComboBox(self.page_2)
        self.Degree.setGeometry(QtCore.QRect(410, 360, 231, 31))
        self.Degree.setObjectName(_fromUtf8("Degree"))
        self.Degree.addItem(_fromUtf8(""))
        self.Degree.addItem(_fromUtf8(""))
        self.Degree.addItem(_fromUtf8(""))
        self.Degree.addItem(_fromUtf8(""))
        self.Degree.addItem(_fromUtf8(""))
        self.AgeInst = QtGui.QLabel(self.page_2)
        self.AgeInst.setGeometry(QtCore.QRect(120, 240, 261, 41))
        self.AgeInst.setObjectName(_fromUtf8("AgeInst"))
        self.Female = QtGui.QRadioButton(self.page_2)
        self.Female.setGeometry(QtCore.QRect(530, 290, 111, 31))
        self.Female.setObjectName(_fromUtf8("Female"))
        self.Instruction = QtGui.QLabel(self.page_2)
        self.Instruction.setGeometry(QtCore.QRect(460, 150, 611, 51))
        self.Instruction.setWordWrap(True)
        self.Instruction.setObjectName(_fromUtf8("Instruction"))
        self.ErrorAge = QtGui.QLabel(self.page_2)
        self.ErrorAge.setGeometry(QtCore.QRect(700, 250, 241, 31))
        self.ErrorAge.setObjectName(_fromUtf8("ErrorAge"))
        self.Age = QtGui.QSpinBox(self.page_2)
        self.Age.setGeometry(QtCore.QRect(410, 250, 231, 22))
        self.Age.setObjectName(_fromUtf8("Age"))
        self.GenderInstr = QtGui.QLabel(self.page_2)
        self.GenderInstr.setGeometry(QtCore.QRect(120, 290, 251, 31))
        self.GenderInstr.setObjectName(_fromUtf8("GenderInstr"))
        self.NationalityInstr = QtGui.QLabel(self.page_2)
        self.NationalityInstr.setGeometry(QtCore.QRect(110, 430, 281, 61))
        self.NationalityInstr.setObjectName(_fromUtf8("NationalityInstr"))
        self.Nationality = QtGui.QComboBox(self.page_2)
        self.Nationality.setGeometry(QtCore.QRect(410, 440, 231, 31))
        self.Nationality.setObjectName(_fromUtf8("Nationality"))
        self.Nationality.addItem(_fromUtf8(""))
        self.Nationality.addItem(_fromUtf8(""))
        self.Nationality.addItem(_fromUtf8(""))
        self.Nationality.addItem(_fromUtf8(""))
        self.Nationality.addItem(_fromUtf8(""))
        self.Nationality.addItem(_fromUtf8(""))
        self.DegreeInst = QtGui.QLabel(self.page_2)
        self.DegreeInst.setGeometry(QtCore.QRect(120, 340, 261, 61))
        self.DegreeInst.setWordWrap(True)
        self.DegreeInst.setObjectName(_fromUtf8("DegreeInst"))
        self.Male = QtGui.QRadioButton(self.page_2)
        self.Male.setGeometry(QtCore.QRect(410, 290, 101, 31))
        self.Male.setObjectName(_fromUtf8("Male"))
        self.ErrorDegree = QtGui.QLabel(self.page_2)
        self.ErrorDegree.setGeometry(QtCore.QRect(700, 350, 401, 31))
        self.ErrorDegree.setObjectName(_fromUtf8("ErrorDegree"))
        self.Continue2 = QtGui.QPushButton(self.page_2)
        self.Continue2.setGeometry(QtCore.QRect(1140, 750, 130, 50))
        self.Continue2.setObjectName(_fromUtf8("Continue2"))
        self.UCLLogo_2 = QtGui.QLabel(self.page_2)
        self.UCLLogo_2.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo_2.setText(_fromUtf8(""))
        self.UCLLogo_2.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo_2.setScaledContents(True)
        self.UCLLogo_2.setObjectName(_fromUtf8("UCLLogo_2"))
        self.stackedWidget.addWidget(self.page_2)
        self.page_3 = QtGui.QWidget()
        self.page_3.setObjectName(_fromUtf8("page_3"))
        self.UCLLogo_3 = QtGui.QLabel(self.page_3)
        self.UCLLogo_3.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo_3.setText(_fromUtf8(""))
        self.UCLLogo_3.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo_3.setScaledContents(True)
        self.UCLLogo_3.setObjectName(_fromUtf8("UCLLogo_3"))
        self.StartAnimation = QtGui.QPushButton(self.page_3)
        self.StartAnimation.setGeometry(QtCore.QRect(600, 670, 211, 61))
        self.StartAnimation.setObjectName(_fromUtf8("StartAnimation"))
        self.GeneralExpl2 = QtGui.QLabel(self.page_3)
        self.GeneralExpl2.setGeometry(QtCore.QRect(230, 540, 1021, 71))
        self.GeneralExpl2.setWordWrap(True)
        self.GeneralExpl2.setObjectName(_fromUtf8("GeneralExpl2"))
        self.page3Expl = QtGui.QLabel(self.page_3)
        self.page3Expl.setGeometry(QtCore.QRect(230, 260, 921, 231))
        self.page3Expl.setWordWrap(True)
        self.page3Expl.setObjectName(_fromUtf8("page3Expl"))
        self.GeneralExpl = QtGui.QLabel(self.page_3)
        self.GeneralExpl.setGeometry(QtCore.QRect(230, 140, 1021, 151))
        self.GeneralExpl.setWordWrap(True)
        self.GeneralExpl.setObjectName(_fromUtf8("GeneralExpl"))
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtGui.QWidget()
        self.page_4.setObjectName(_fromUtf8("page_4"))
        self.Intro = QtGui.QLabel(self.page_4)
        self.Intro.setGeometry(QtCore.QRect(480, 270, 381, 101))
        self.Intro.setObjectName(_fromUtf8("Intro"))
        self.NextStepPage4 = QtGui.QPushButton(self.page_4)
        self.NextStepPage4.setGeometry(QtCore.QRect(1000, 600, 240, 110))
        self.NextStepPage4.setObjectName(_fromUtf8("NextStepPage4"))
        self.Step1 = QtGui.QLabel(self.page_4)
        self.Step1.setGeometry(QtCore.QRect(10, 20, 411, 131))
        self.Step1.setWordWrap(True)
        self.Step1.setObjectName(_fromUtf8("Step1"))
        self.Symbol = QtGui.QLabel(self.page_4)
        self.Symbol.setEnabled(True)
        self.Symbol.setGeometry(QtCore.QRect(540, 10, 191, 141))
        self.Symbol.setText(_fromUtf8(""))
        self.Symbol.setPixmap(QtGui.QPixmap(_fromUtf8("ExpCircle.jpg")))
        self.Symbol.setScaledContents(True)
        self.Symbol.setObjectName(_fromUtf8("Symbol"))
        self.Step2 = QtGui.QLabel(self.page_4)
        self.Step2.setGeometry(QtCore.QRect(10, 160, 431, 101))
        self.Step2.setScaledContents(True)
        self.Step2.setWordWrap(True)
        self.Step2.setObjectName(_fromUtf8("Step2"))
        self.Mouse = QtGui.QLabel(self.page_4)
        self.Mouse.setGeometry(QtCore.QRect(640, 360, 20, 31))
        self.Mouse.setText(_fromUtf8(""))
        self.Mouse.setPixmap(QtGui.QPixmap(_fromUtf8("MouseCursor.png")))
        self.Mouse.setScaledContents(True)
        self.Mouse.setObjectName(_fromUtf8("Mouse"))
        self.Step3 = QtGui.QLabel(self.page_4)
        self.Step3.setGeometry(QtCore.QRect(10, 290, 401, 111))
        self.Step3.setWordWrap(True)
        self.Step3.setObjectName(_fromUtf8("Step3"))
        self.Box = QtGui.QLabel(self.page_4)
        self.Box.setGeometry(QtCore.QRect(540, 660, 231, 221))
        self.Box.setText(_fromUtf8(""))
        self.Box.setPixmap(QtGui.QPixmap(_fromUtf8("ExpBox.jpg")))
        self.Box.setScaledContents(True)
        self.Box.setObjectName(_fromUtf8("Box"))
        self.Step4 = QtGui.QLabel(self.page_4)
        self.Step4.setGeometry(QtCore.QRect(10, 450, 341, 121))
        self.Step4.setWordWrap(True)
        self.Step4.setObjectName(_fromUtf8("Step4"))
        self.PointsAndTime = QtGui.QWidget(self.page_4)
        self.PointsAndTime.setGeometry(QtCore.QRect(980, 60, 321, 361))
        self.PointsAndTime.setObjectName(_fromUtf8("PointsAndTime"))
        self.NumberOfHits_2 = QtGui.QLabel(self.PointsAndTime)
        self.NumberOfHits_2.setGeometry(QtCore.QRect(40, 160, 191, 41))
        self.NumberOfHits_2.setObjectName(_fromUtf8("NumberOfHits_2"))
        self.LCDClock_2 = QtGui.QLCDNumber(self.PointsAndTime)
        self.LCDClock_2.setGeometry(QtCore.QRect(30, 70, 281, 91))
        self.LCDClock_2.setProperty("value", 30.0)
        self.LCDClock_2.setObjectName(_fromUtf8("LCDClock_2"))
        self.TimeLeft_2 = QtGui.QLabel(self.PointsAndTime)
        self.TimeLeft_2.setGeometry(QtCore.QRect(40, 20, 191, 41))
        self.TimeLeft_2.setObjectName(_fromUtf8("TimeLeft_2"))
        self.label_6 = QtGui.QLabel(self.PointsAndTime)
        self.label_6.setGeometry(QtCore.QRect(40, 220, 281, 91))
        self.label_6.setFrameShape(QtGui.QFrame.Box)
        self.label_6.setFrameShadow(QtGui.QFrame.Sunken)
        self.label_6.setObjectName(_fromUtf8("label_6"))
        self.LeftButton = QtGui.QLabel(self.page_4)
        self.LeftButton.setGeometry(QtCore.QRect(800, 280, 141, 111))
        self.LeftButton.setText(_fromUtf8(""))
        self.LeftButton.setPixmap(QtGui.QPixmap(_fromUtf8("LeftMouseButton.jpg")))
        self.LeftButton.setScaledContents(True)
        self.LeftButton.setObjectName(_fromUtf8("LeftButton"))
        self.Symbol_2 = QtGui.QLabel(self.page_4)
        self.Symbol_2.setEnabled(True)
        self.Symbol_2.setGeometry(QtCore.QRect(540, 10, 191, 141))
        self.Symbol_2.setToolTip(_fromUtf8(""))
        self.Symbol_2.setText(_fromUtf8(""))
        self.Symbol_2.setPixmap(QtGui.QPixmap(_fromUtf8("ExpCircleGhost.jpg")))
        self.Symbol_2.setScaledContents(True)
        self.Symbol_2.setObjectName(_fromUtf8("Symbol_2"))
        self.Symbol.raise_()
        self.Box.raise_()
        self.Intro.raise_()
        self.NextStepPage4.raise_()
        self.Step1.raise_()
        self.Step2.raise_()
        self.Step3.raise_()
        self.Step4.raise_()
        self.PointsAndTime.raise_()
        self.LeftButton.raise_()
        self.Symbol_2.raise_()
        self.Mouse.raise_()
        self.stackedWidget.addWidget(self.page_4)
        self.page_5 = QtGui.QWidget()
        self.page_5.setObjectName(_fromUtf8("page_5"))
        self.NumberOfHits = QtGui.QLabel(self.page_5)
        self.NumberOfHits.setGeometry(QtCore.QRect(980, 240, 191, 41))
        self.NumberOfHits.setObjectName(_fromUtf8("NumberOfHits"))
        self.LCDClock = QtGui.QLCDNumber(self.page_5)
        self.LCDClock.setGeometry(QtCore.QRect(970, 150, 281, 91))
        self.LCDClock.setObjectName(_fromUtf8("LCDClock"))
        self.TimeLeft = QtGui.QLabel(self.page_5)
        self.TimeLeft.setGeometry(QtCore.QRect(980, 100, 191, 41))
        self.TimeLeft.setObjectName(_fromUtf8("TimeLeft"))
        self.stackedWidget.addWidget(self.page_5)
        self.page_6 = QtGui.QWidget()
        self.page_6.setObjectName(_fromUtf8("page_6"))
        self.ExplanationPage6 = QtGui.QLabel(self.page_6)
        self.ExplanationPage6.setGeometry(QtCore.QRect(280, 160, 901, 341))
        self.ExplanationPage6.setWordWrap(True)
        self.ExplanationPage6.setObjectName(_fromUtf8("ExplanationPage6"))
        self.StartAnimation_page6 = QtGui.QPushButton(self.page_6)
        self.StartAnimation_page6.setGeometry(QtCore.QRect(600, 600, 210, 80))
        self.StartAnimation_page6.setObjectName(_fromUtf8("StartAnimation_page6"))
        self.UCLLogo_4 = QtGui.QLabel(self.page_6)
        self.UCLLogo_4.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo_4.setText(_fromUtf8(""))
        self.UCLLogo_4.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo_4.setScaledContents(True)
        self.UCLLogo_4.setObjectName(_fromUtf8("UCLLogo_4"))
        self.stackedWidget.addWidget(self.page_6)
        self.page_7 = QtGui.QWidget()
        self.page_7.setObjectName(_fromUtf8("page_7"))
        self.NextStep_Page7 = QtGui.QPushButton(self.page_7)
        self.NextStep_Page7.setGeometry(QtCore.QRect(1000, 600, 240, 110))
        self.NextStep_Page7.setObjectName(_fromUtf8("NextStep_Page7"))
        self.RedX = QtGui.QLabel(self.page_7)
        self.RedX.setGeometry(QtCore.QRect(676, 300, 61, 71))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.RedX.setFont(font)
        self.RedX.setObjectName(_fromUtf8("RedX"))
        self.Step1_Page7 = QtGui.QLabel(self.page_7)
        self.Step1_Page7.setGeometry(QtCore.QRect(0, 20, 511, 91))
        self.Step1_Page7.setWordWrap(True)
        self.Step1_Page7.setObjectName(_fromUtf8("Step1_Page7"))
        self.ExampleSentence = QtGui.QLabel(self.page_7)
        self.ExampleSentence.setGeometry(QtCore.QRect(570, 320, 241, 31))
        self.ExampleSentence.setObjectName(_fromUtf8("ExampleSentence"))
        self.Step2_Page7 = QtGui.QLabel(self.page_7)
        self.Step2_Page7.setGeometry(QtCore.QRect(0, 130, 501, 101))
        self.Step2_Page7.setWordWrap(True)
        self.Step2_Page7.setObjectName(_fromUtf8("Step2_Page7"))
        self.LButton = QtGui.QLabel(self.page_7)
        self.LButton.setGeometry(QtCore.QRect(690, 540, 91, 91))
        self.LButton.setText(_fromUtf8(""))
        self.LButton.setPixmap(QtGui.QPixmap(_fromUtf8("ExpLButton.jpg")))
        self.LButton.setScaledContents(True)
        self.LButton.setObjectName(_fromUtf8("LButton"))
        self.KButton = QtGui.QLabel(self.page_7)
        self.KButton.setGeometry(QtCore.QRect(490, 540, 91, 91))
        self.KButton.setText(_fromUtf8(""))
        self.KButton.setPixmap(QtGui.QPixmap(_fromUtf8("ExpKButton.jpg")))
        self.KButton.setScaledContents(True)
        self.KButton.setObjectName(_fromUtf8("KButton"))
        self.Finger = QtGui.QLabel(self.page_7)
        self.Finger.setGeometry(QtCore.QRect(430, 750, 251, 221))
        self.Finger.setText(_fromUtf8(""))
        self.Finger.setPixmap(QtGui.QPixmap(_fromUtf8("ExpRightIndexFinger.jpg")))
        self.Finger.setScaledContents(True)
        self.Finger.setObjectName(_fromUtf8("Finger"))
        self.Step3_Page7 = QtGui.QLabel(self.page_7)
        self.Step3_Page7.setGeometry(QtCore.QRect(0, 260, 501, 101))
        self.Step3_Page7.setWordWrap(True)
        self.Step3_Page7.setObjectName(_fromUtf8("Step3_Page7"))
        self.Step4_Page7 = QtGui.QLabel(self.page_7)
        self.Step4_Page7.setGeometry(QtCore.QRect(0, 380, 411, 91))
        self.Step4_Page7.setWordWrap(True)
        self.Step4_Page7.setObjectName(_fromUtf8("Step4_Page7"))
        self.stackedWidget.addWidget(self.page_7)
        self.page_8 = QtGui.QWidget()
        self.page_8.setObjectName(_fromUtf8("page_8"))
        self.Stimuli = QtGui.QLabel(self.page_8)
        self.Stimuli.setGeometry(QtCore.QRect(570, 310, 401, 51))
        self.Stimuli.setText(_fromUtf8(""))
        self.Stimuli.setObjectName(_fromUtf8("Stimuli"))
        self.x = QtGui.QLabel(self.page_8)
        self.x.setGeometry(QtCore.QRect(676, 300, 61, 71))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.x.setFont(font)
        self.x.setObjectName(_fromUtf8("x"))
        self.Explanation = QtGui.QLabel(self.page_8)
        self.Explanation.setGeometry(QtCore.QRect(590, 150, 251, 31))
        self.Explanation.setObjectName(_fromUtf8("Explanation"))
        self.label = QtGui.QLabel(self.page_8)
        self.label.setGeometry(QtCore.QRect(490, 230, 521, 16))
        self.label.setObjectName(_fromUtf8("label"))
        self.Feedback = QtGui.QLabel(self.page_8)
        self.Feedback.setGeometry(QtCore.QRect(480, 390, 701, 111))
        self.Feedback.setText(_fromUtf8(""))
        self.Feedback.setWordWrap(True)
        self.Feedback.setObjectName(_fromUtf8("Feedback"))
        self.stackedWidget.addWidget(self.page_8)
        self.page_9 = QtGui.QWidget()
        self.page_9.setObjectName(_fromUtf8("page_9"))
        self.label_4 = QtGui.QLabel(self.page_9)
        self.label_4.setGeometry(QtCore.QRect(250, 170, 931, 291))
        self.label_4.setWordWrap(True)
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.UCLLogo_5 = QtGui.QLabel(self.page_9)
        self.UCLLogo_5.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo_5.setText(_fromUtf8(""))
        self.UCLLogo_5.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo_5.setScaledContents(True)
        self.UCLLogo_5.setObjectName(_fromUtf8("UCLLogo_5"))
        self.StartExplanation_page9 = QtGui.QPushButton(self.page_9)
        self.StartExplanation_page9.setGeometry(QtCore.QRect(600, 600, 210, 80))
        self.StartExplanation_page9.setObjectName(_fromUtf8("StartExplanation_page9"))
        self.stackedWidget.addWidget(self.page_9)
        self.page_10 = QtGui.QWidget()
        self.page_10.setObjectName(_fromUtf8("page_10"))
        self.NextStep_Page10 = QtGui.QPushButton(self.page_10)
        self.NextStep_Page10.setGeometry(QtCore.QRect(1100, 580, 231, 141))
        self.NextStep_Page10.setObjectName(_fromUtf8("NextStep_Page10"))
        self.IntroFramePage10 = QtGui.QFrame(self.page_10)
        self.IntroFramePage10.setGeometry(QtCore.QRect(1020, 20, 311, 401))
        self.IntroFramePage10.setFrameShape(QtGui.QFrame.StyledPanel)
        self.IntroFramePage10.setFrameShadow(QtGui.QFrame.Raised)
        self.IntroFramePage10.setObjectName(_fromUtf8("IntroFramePage10"))
        self.StartPage9_3 = QtGui.QPushButton(self.IntroFramePage10)
        self.StartPage9_3.setEnabled(True)
        self.StartPage9_3.setGeometry(QtCore.QRect(60, 300, 171, 91))
        self.StartPage9_3.setObjectName(_fromUtf8("StartPage9_3"))
        self.InstructionDistanceTask_3 = QtGui.QLabel(self.IntroFramePage10)
        self.InstructionDistanceTask_3.setGeometry(QtCore.QRect(60, 50, 241, 111))
        self.InstructionDistanceTask_3.setFrameShape(QtGui.QFrame.StyledPanel)
        self.InstructionDistanceTask_3.setWordWrap(True)
        self.InstructionDistanceTask_3.setObjectName(_fromUtf8("InstructionDistanceTask_3"))
        self.label_15 = QtGui.QLabel(self.IntroFramePage10)
        self.label_15.setGeometry(QtCore.QRect(60, 10, 71, 41))
        self.label_15.setText(_fromUtf8(""))
        self.label_15.setPixmap(QtGui.QPixmap(_fromUtf8("1cm.jpg")))
        self.label_15.setObjectName(_fromUtf8("label_15"))
        self.LCDClock2_3 = QtGui.QLCDNumber(self.IntroFramePage10)
        self.LCDClock2_3.setGeometry(QtCore.QRect(60, 180, 241, 111))
        self.LCDClock2_3.setProperty("value", 8.0)
        self.LCDClock2_3.setObjectName(_fromUtf8("LCDClock2_3"))
        self.LeftMousebutton_Page10 = QtGui.QLabel(self.page_10)
        self.LeftMousebutton_Page10.setGeometry(QtCore.QRect(720, 450, 101, 81))
        self.LeftMousebutton_Page10.setText(_fromUtf8(""))
        self.LeftMousebutton_Page10.setPixmap(QtGui.QPixmap(_fromUtf8("LeftMouseButton.jpg")))
        self.LeftMousebutton_Page10.setScaledContents(True)
        self.LeftMousebutton_Page10.setObjectName(_fromUtf8("LeftMousebutton_Page10"))
        self.mouse_page10 = QtGui.QLabel(self.page_10)
        self.mouse_page10.setGeometry(QtCore.QRect(570, 530, 21, 21))
        self.mouse_page10.setText(_fromUtf8(""))
        self.mouse_page10.setPixmap(QtGui.QPixmap(_fromUtf8("MouseCursor.png")))
        self.mouse_page10.setScaledContents(True)
        self.mouse_page10.setObjectName(_fromUtf8("mouse_page10"))
        self.Ball_Page10 = QtGui.QLabel(self.page_10)
        self.Ball_Page10.setGeometry(QtCore.QRect(560, 320, 31, 31))
        self.Ball_Page10.setText(_fromUtf8(""))
        self.Ball_Page10.setPixmap(QtGui.QPixmap(_fromUtf8("ExpCircle.jpg")))
        self.Ball_Page10.setScaledContents(True)
        self.Ball_Page10.setObjectName(_fromUtf8("Ball_Page10"))
        self.Cross_Page10 = QtGui.QLabel(self.page_10)
        self.Cross_Page10.setGeometry(QtCore.QRect(570, 320, 30, 30))
        self.Cross_Page10.setObjectName(_fromUtf8("Cross_Page10"))
        self.Step2_Page10 = QtGui.QLabel(self.page_10)
        self.Step2_Page10.setGeometry(QtCore.QRect(30, 80, 351, 111))
        self.Step2_Page10.setWordWrap(True)
        self.Step2_Page10.setObjectName(_fromUtf8("Step2_Page10"))
        self.Step1_Page10 = QtGui.QLabel(self.page_10)
        self.Step1_Page10.setGeometry(QtCore.QRect(30, 10, 351, 71))
        self.Step1_Page10.setWordWrap(True)
        self.Step1_Page10.setObjectName(_fromUtf8("Step1_Page10"))
        self.Step4_Page10 = QtGui.QLabel(self.page_10)
        self.Step4_Page10.setGeometry(QtCore.QRect(30, 290, 351, 171))
        self.Step4_Page10.setWordWrap(True)
        self.Step4_Page10.setObjectName(_fromUtf8("Step4_Page10"))
        self.Step5_Page10 = QtGui.QLabel(self.page_10)
        self.Step5_Page10.setGeometry(QtCore.QRect(30, 470, 351, 121))
        self.Step5_Page10.setWordWrap(True)
        self.Step5_Page10.setObjectName(_fromUtf8("Step5_Page10"))
        self.Step3_Page10 = QtGui.QLabel(self.page_10)
        self.Step3_Page10.setGeometry(QtCore.QRect(30, 190, 351, 101))
        self.Step3_Page10.setWordWrap(True)
        self.Step3_Page10.setObjectName(_fromUtf8("Step3_Page10"))
        self.Step6_Page10 = QtGui.QLabel(self.page_10)
        self.Step6_Page10.setGeometry(QtCore.QRect(30, 600, 351, 161))
        self.Step6_Page10.setWordWrap(True)
        self.Step6_Page10.setObjectName(_fromUtf8("Step6_Page10"))
        self.Frame = QtGui.QLabel(self.page_10)
        self.Frame.setGeometry(QtCore.QRect(0, 10, 1041, 751))
        self.Frame.setFrameShape(QtGui.QFrame.Box)
        self.Frame.setText(_fromUtf8(""))
        self.Frame.setObjectName(_fromUtf8("Frame"))
        self.Frame.raise_()
        self.Cross_Page10.raise_()
        self.NextStep_Page10.raise_()
        self.IntroFramePage10.raise_()
        self.LeftMousebutton_Page10.raise_()
        self.Ball_Page10.raise_()
        self.Step2_Page10.raise_()
        self.Step1_Page10.raise_()
        self.Step4_Page10.raise_()
        self.Step5_Page10.raise_()
        self.mouse_page10.raise_()
        self.Step3_Page10.raise_()
        self.Step6_Page10.raise_()
        self.stackedWidget.addWidget(self.page_10)
        self.page_11 = QtGui.QWidget()
        self.page_11.setObjectName(_fromUtf8("page_11"))
        self.InstructionDistanceTask = QtGui.QLabel(self.page_11)
        self.InstructionDistanceTask.setGeometry(QtCore.QRect(1100, 70, 241, 111))
        self.InstructionDistanceTask.setFrameShape(QtGui.QFrame.StyledPanel)
        self.InstructionDistanceTask.setWordWrap(True)
        self.InstructionDistanceTask.setObjectName(_fromUtf8("InstructionDistanceTask"))
        self.LCDClock2 = QtGui.QLCDNumber(self.page_11)
        self.LCDClock2.setGeometry(QtCore.QRect(1100, 200, 241, 111))
        self.LCDClock2.setObjectName(_fromUtf8("LCDClock2"))
        self.label_5 = QtGui.QLabel(self.page_11)
        self.label_5.setGeometry(QtCore.QRect(1100, 30, 71, 41))
        self.label_5.setText(_fromUtf8(""))
        self.label_5.setPixmap(QtGui.QPixmap(_fromUtf8("1cm.jpg")))
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.label_3 = QtGui.QLabel(self.page_11)
        self.label_3.setGeometry(QtCore.QRect(540, 410, 30, 30))
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.StartPage11 = QtGui.QPushButton(self.page_11)
        self.StartPage11.setGeometry(QtCore.QRect(1100, 320, 171, 91))
        self.StartPage11.setObjectName(_fromUtf8("StartPage11"))
        self.stackedWidget.addWidget(self.page_11)
        self.page_12 = QtGui.QWidget()
        self.page_12.setObjectName(_fromUtf8("page_12"))
        self.UCLLogo_7 = QtGui.QLabel(self.page_12)
        self.UCLLogo_7.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo_7.setText(_fromUtf8(""))
        self.UCLLogo_7.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo_7.setScaledContents(True)
        self.UCLLogo_7.setObjectName(_fromUtf8("UCLLogo_7"))
        self.label_2 = QtGui.QLabel(self.page_12)
        self.label_2.setGeometry(QtCore.QRect(140, 140, 1171, 221))
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.StartExp = QtGui.QPushButton(self.page_12)
        self.StartExp.setGeometry(QtCore.QRect(600, 600, 210, 80))
        self.StartExp.setObjectName(_fromUtf8("StartExp"))
        self.stackedWidget.addWidget(self.page_12)
        self.page_13 = QtGui.QWidget()
        self.page_13.setObjectName(_fromUtf8("page_13"))
        self.UCLLogo_8 = QtGui.QLabel(self.page_13)
        self.UCLLogo_8.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo_8.setText(_fromUtf8(""))
        self.UCLLogo_8.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo_8.setScaledContents(True)
        self.UCLLogo_8.setObjectName(_fromUtf8("UCLLogo_8"))
        self.ErrorClick = QtGui.QLabel(self.page_13)
        self.ErrorClick.setGeometry(QtCore.QRect(1120, 570, 221, 151))
        self.ErrorClick.setWordWrap(True)
        self.ErrorClick.setObjectName(_fromUtf8("ErrorClick"))
        self.label_7 = QtGui.QLabel(self.page_13)
        self.label_7.setGeometry(QtCore.QRect(60, 280, 811, 91))
        self.label_7.setWordWrap(True)
        self.label_7.setObjectName(_fromUtf8("label_7"))
        self.ErrorEmail = QtGui.QLabel(self.page_13)
        self.ErrorEmail.setGeometry(QtCore.QRect(700, 380, 351, 51))
        self.ErrorEmail.setObjectName(_fromUtf8("ErrorEmail"))
        self.YesParticipate = QtGui.QRadioButton(self.page_13)
        self.YesParticipate.setGeometry(QtCore.QRect(70, 220, 95, 20))
        self.YesParticipate.setObjectName(_fromUtf8("YesParticipate"))
        self.ContinueEmail = QtGui.QPushButton(self.page_13)
        self.ContinueEmail.setGeometry(QtCore.QRect(1140, 750, 130, 50))
        self.ContinueEmail.setObjectName(_fromUtf8("ContinueEmail"))
        self.Email = QtGui.QLineEdit(self.page_13)
        self.Email.setGeometry(QtCore.QRect(60, 390, 611, 41))
        self.Email.setText(_fromUtf8(""))
        self.Email.setObjectName(_fromUtf8("Email"))
        self.NoParticipate = QtGui.QRadioButton(self.page_13)
        self.NoParticipate.setGeometry(QtCore.QRect(160, 220, 95, 20))
        self.NoParticipate.setObjectName(_fromUtf8("NoParticipate"))
        self.CongratMessage = QtGui.QLabel(self.page_13)
        self.CongratMessage.setGeometry(QtCore.QRect(60, 140, 1141, 51))
        self.CongratMessage.setWordWrap(True)
        self.CongratMessage.setObjectName(_fromUtf8("CongratMessage"))
        self.stackedWidget.addWidget(self.page_13)
        self.page_14 = QtGui.QWidget()
        self.page_14.setObjectName(_fromUtf8("page_14"))
        self.UCLLogo_9 = QtGui.QLabel(self.page_14)
        self.UCLLogo_9.setGeometry(QtCore.QRect(0, 0, 1360, 100))
        self.UCLLogo_9.setText(_fromUtf8(""))
        self.UCLLogo_9.setPixmap(QtGui.QPixmap(_fromUtf8("UCLLogo.jpg")))
        self.UCLLogo_9.setScaledContents(True)
        self.UCLLogo_9.setObjectName(_fromUtf8("UCLLogo_9"))
        self.Debrief = QtGui.QTextBrowser(self.page_14)
        self.Debrief.setGeometry(QtCore.QRect(10, 130, 1341, 551))
        self.Debrief.setObjectName(_fromUtf8("Debrief"))
        self.terminateExp = QtGui.QPushButton(self.page_14)
        self.terminateExp.setGeometry(QtCore.QRect(570, 700, 171, 81))
        self.terminateExp.setObjectName(_fromUtf8("terminateExp"))
        self.stackedWidget.addWidget(self.page_14)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1360, 26))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow", None))
        self.Briefing.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Calibri\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600; color:#404040; background-color:#ffffff;\">STUDY INFORMATION</span><span style=\" font-size:12pt;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; color:#404040;\">The following experiment aims to validate a new test of cognitive abilities. The test consists of an assessment of motor movement persistence, language comprehension and distance estimation skills. </span><span style=\" font-size:12pt; color:#404040; background-color:#ffffff;\">The person with the highest motor persistence score will win £50.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; color:#404040; background-color:#ffffff;\">This study has been approved by the UCL Department of Clinical, Educational and Health Psychology Research Ethics Committee. Thank you for your interest in our research. Before you decide whether you would like to participate in the experiment, it is important for you to understand what it will involve. Please take time to read the following information carefully. Ask us if there is anything that is not clear or if you would like more information. Take time to decide whether you wish to take part.</span><span style=\" font-size:12pt;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; font-weight:600; color:#404040;\">Procedure:</span><span style=\" font-size:12pt;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; color:#404040; background-color:#ffffff;\">You will be asked to fill in personal information. Afterwards your cognitive ability will be tested in three different tests. First you will be tested on your motor persistence, for this task you must move an object across the screen via the computer mouse. The person of the highest motor persistence score will win £50. Afterwards your language comprehension will be tested. Lastly, your distance estimation skills will be tested.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; font-weight:600; color:#404040;\">Data</span><span style=\" font-size:12pt; color:#404040;\">:</span><span style=\" font-size:12pt;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; color:#404040; background-color:#ffffff;\">All data will be collected and stored in accordance with the Data Protection Act 1998. The data will be stored anonymously and it will only be accessed by the researchers involved in the study. The data collected will not contain any identifying information and it will only be used internally to UCL.</span><span style=\" font-size:12pt;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; font-weight:600; color:#404040;\">Participant’s Rights:</span><span style=\" font-size:12pt; font-weight:600;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; color:#404040; background-color:#ffffff;\">Please remember that you have the right to withdraw from the experiment at any time, without an explanation, and you can request that the data you have supplied are not used in the study. You have the right to refuse to answer any question that is asked of you and to have your questions about the procedure answered (unless answering them compromises the study’s outcome).</span><span style=\" font-size:12pt;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; font-weight:600; color:#404040;\">Further information:</span><span style=\" font-size:12pt; font-weight:600;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-size:12pt; color:#404040; background-color:#ffffff;\">We will be glad to answer any remaining questions that you might have regarding the study\'s procedure or the consent form.</span></p></body></html>", None))
        self.Info.setText(_translate("MainWindow", "Please answer the following questions, then press continue. \n"
"Do you understand the statements above, and freely consent to participate in the study? ", None))
        self.CheckYes.setText(_translate("MainWindow", "Yes", None))
        self.CheckNo.setText(_translate("MainWindow", "No", None))
        self.Continue.setText(_translate("MainWindow", "Continue", None))
        self.ErrorMessage.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">If you don\'t want to participate, please press &quot;Leave&quot; and talk to the researcher</span></p></body></html>", None))
        self.LeaveExp.setText(_translate("MainWindow", "Leave", None))
        self.ErrorNationality.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Please indicate your nationality</span></p></body></html>", None))
        self.ErrorGender.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Please indicate your gender</span></p></body></html>", None))
        self.Degree.setItemText(0, _translate("MainWindow", "Please indicate", None))
        self.Degree.setItemText(1, _translate("MainWindow", "Middle school degree", None))
        self.Degree.setItemText(2, _translate("MainWindow", "High school degree", None))
        self.Degree.setItemText(3, _translate("MainWindow", "University degree", None))
        self.Degree.setItemText(4, _translate("MainWindow", "Other", None))
        self.AgeInst.setText(_translate("MainWindow", "How old are you? (in years)", None))
        self.Female.setText(_translate("MainWindow", "Female", None))
        self.Instruction.setText(_translate("MainWindow", "Please fill in your personal information before you continue", None))
        self.ErrorAge.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Please type in a valid age</span></p></body></html>", None))
        self.GenderInstr.setText(_translate("MainWindow", "What is your gender?", None))
        self.NationalityInstr.setText(_translate("MainWindow", "What is your nationality?", None))
        self.Nationality.setItemText(0, _translate("MainWindow", "Please indicate", None))
        self.Nationality.setItemText(1, _translate("MainWindow", "British", None))
        self.Nationality.setItemText(2, _translate("MainWindow", "Chinese", None))
        self.Nationality.setItemText(3, _translate("MainWindow", "Indian", None))
        self.Nationality.setItemText(4, _translate("MainWindow", "US American", None))
        self.Nationality.setItemText(5, _translate("MainWindow", "Other", None))
        self.DegreeInst.setText(_translate("MainWindow", "What is your highest educational degree?", None))
        self.Male.setText(_translate("MainWindow", "Male", None))
        self.ErrorDegree.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Please indicate your educational degree</span></p></body></html>", None))
        self.Continue2.setText(_translate("MainWindow", "Continue", None))
        self.StartAnimation.setText(_translate("MainWindow", "Start Explanation", None))
        self.GeneralExpl2.setText(_translate("MainWindow", "Press \"Start Explanation\" to see a step-by-step explanation of the task. Afterwards you will do a test trial.", None))
        self.page3Expl.setText(_translate("MainWindow", "<html><head/><body><p>This task will test your ability to persist motor movement. You goal is to move the symbol from the upper part of the screen into the container of the lower part of the screen. For each time you drop the symbol, you will gain one point. Just click the symbol with the left mouse button, hold the left mouse button and release it, when you moved the symbol over the container. Importantly, there is a time limit of 15 minutes and the person with the highest score will win <span style=\" font-family:\'Times New Roman,serif\';\">£</span>50! Try to get as many points as possible!</p></body></html>", None))
        self.GeneralExpl.setText(_translate("MainWindow", "<html><head/><body><p>Welcome to the Cognitive Ability Test. In the following you will do test rounds that should help you to get familiarized with each sub-task. Importantly, these test rounds do not count into your performance.</p><p>Let us start with the first task, the Motor Persistence Task:</p></body></html>", None))
        self.Intro.setText(_translate("MainWindow", "Please click \"Start Explanation\"", None))
        self.NextStepPage4.setText(_translate("MainWindow", "Start Explanation", None))
        self.Step1.setText(_translate("MainWindow", "1. You will see a circle above/below, that is constantly changing", None))
        self.Step2.setText(_translate("MainWindow", "2. Go above the circle with the mouse courser and click with the left mouse button on it", None))
        self.Step3.setText(_translate("MainWindow", "3. Hold the left mouse button and drag the symbol over the container at the button/top of the screen and release the left mouse button (ANIMATION)", None))
        self.Step4.setText(_translate("MainWindow", "4. Congratulation you scored a point! But attention: you will have limited time to score a point. Now you can start the test round!", None))
        self.NumberOfHits_2.setText(_translate("MainWindow", "Number of Hits:", None))
        self.TimeLeft_2.setText(_translate("MainWindow", "Time left:", None))
        self.label_6.setText(_translate("MainWindow", "1", None))
        self.NumberOfHits.setText(_translate("MainWindow", "Number of Hits:", None))
        self.TimeLeft.setText(_translate("MainWindow", "Time left:", None))
        self.ExplanationPage6.setText(_translate("MainWindow", "<html><head/><body><p>Now follows the explanation for the second part of the cognitive test: The Language Comprehension Test.</p><p>In the Language Comprehension Test you will see sentences in the middle of the screen that either make sense or don\'t make sense. By pressing the &quot;K&quot; button you decide that the sentence is sensible, by pressing the &quot;L&quot; button you decide that the sentence is nonsensible. You start the round by pressing the &quot;K&quot; button. Importantly, you need to use your<span style=\" text-decoration: underline;\"> right index finger</span> to press the button on the keyboard. Please only use your right index finger to press the buttons! You need to make the decision as fast as possible, the time it takes you to make a decision will be counted as your performance.</p><p>Please click &quot;Start Explanation&quot; to see a step-by-step explanation of the procedure.</p></body></html>", None))
        self.StartAnimation_page6.setText(_translate("MainWindow", "Start Explanation", None))
        self.NextStep_Page7.setText(_translate("MainWindow", "Start Explanation", None))
        self.RedX.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:26pt; color:#ff0000;\">+</span></p></body></html>", None))
        self.Step1_Page7.setText(_translate("MainWindow", "1. You will need to press \"K\" on the keyboard to start the trial. Then a sentence will appear where the red cross is", None))
        self.ExampleSentence.setText(_translate("MainWindow", "Anna gives you an apple", None))
        self.Step2_Page7.setText(_translate("MainWindow", "2. Decide whether the sentence makes sense or not by pressing either \"K\" or \"L\" on your keyboard with your right index finger. Press \"K\" if it is a sensible sentence and \"L\" if it is a nonsensible sentence", None))
        self.Step3_Page7.setText(_translate("MainWindow", "3. In this case it is a sensible sentence so you would need to press the \"K\" Button with the right index finger", None))
        self.Step4_Page7.setText(_translate("MainWindow", "4. The time it took you to make the decision will be counted, so make the decisions as fast as possible. Press \"Start Test Trial\"", None))
        self.x.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:26pt; color:#ff0000;\">+</span></p></body></html>", None))
        self.Explanation.setText(_translate("MainWindow", "Please press \"K\" to start", None))
        self.label.setText(_translate("MainWindow", "\"K\" sensible sentence, \"L\" nonsensible sentence", None))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p>Now follows the explanation for the third part of the Cognitive Test Battery. The Distance Estimation Test.</p><p>In the Distance Estimation Test you will see a ball in the middle of the screen. You will have to place the ball in a certain distance away from the middle of the screen (signalled by a red cross). You have 8 seconds for your estimation. Place the ball intuitively and quickly in ANY direction you want.</p><p>Please click &quot;Start Explanation&quot; to see a more detailed explanation.</p></body></html>", None))
        self.StartExplanation_page9.setText(_translate("MainWindow", "Start Explanation", None))
        self.NextStep_Page10.setText(_translate("MainWindow", "Start Explanation", None))
        self.StartPage9_3.setText(_translate("MainWindow", "Start the task", None))
        self.InstructionDistanceTask_3.setText(_translate("MainWindow", "Move the ball 4 cm away from the center", None))
        self.Cross_Page10.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#aa0000;\">+</span></p></body></html>", None))
        self.Step2_Page10.setText(_translate("MainWindow", "2. On the right side you see a help to estimate distance per eye (1cm), an instruction and a clock", None))
        self.Step1_Page10.setText(_translate("MainWindow", "1. In the experiment you will need to press the \"Start the task\" button", None))
        self.Step4_Page10.setText(_translate("MainWindow", "4. Move the ball away from the center to the distance that the instruction specifies (in this case 4 cm), by holding the left mouse button. In ANY direction you want within the frame", None))
        self.Step5_Page10.setText(_translate("MainWindow", "5. You have to make the decision BY EYE, don\'t use your finger, a paper or pen to measure the distance. Just estimate it intuitively", None))
        self.Step3_Page10.setText(_translate("MainWindow", "3. In the middle of the screen there is a ball. Move the mouse above the ball", None))
        self.Step6_Page10.setText(_translate("MainWindow", "6. When the time runs down, the current position of the ball will count as your estimation and the next round starts automatically. Please press \"Start Test Trial\"", None))
        self.InstructionDistanceTask.setText(_translate("MainWindow", "Task description will appear here", None))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#aa0000;\">+</span></p></body></html>", None))
        self.StartPage11.setText(_translate("MainWindow", "Start the task", None))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p>This is the end of the test rounds. Now the real test starts. You will begin with the Motor Persistence Task, that is, you must move the circle into the box as many times as possible. This time the round will last 15 minutes and your points count. Try to get the highest score of all participants to win 50 £. Afterwards, you will do the Language Comprehension Task in which you must decide if a sentence is sensible or not. Finally, you will do the Distance Estimation Task, in which you have to position the object anywhere within the given distance. Importantly, all the tasks will take longer than the test trials. Good luck!</p></body></html>", None))
        self.StartExp.setText(_translate("MainWindow", "Start the Experiment", None))
        self.ErrorClick.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Please indicate whether you wish to participate in the lottery</span></p></body></html>", None))
        self.label_7.setText(_translate("MainWindow", "In case you want to win the 50 pounds, please write down your e-mail address below. This will be saved in a separate form and cannot be traced back to your personal information. We will contact you in case you have won.", None))
        self.ErrorEmail.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Please type in a valid E-mail address</span></p></body></html>", None))
        self.YesParticipate.setText(_translate("MainWindow", "Yes", None))
        self.ContinueEmail.setText(_translate("MainWindow", "Continue", None))
        self.NoParticipate.setText(_translate("MainWindow", "No", None))
        self.CongratMessage.setText(_translate("MainWindow", "Congratulation you finished each task. The person with the highest score in the motor persistance task will win 50 pounds. Do you wish to be considered for this win?", None))
        self.Debrief.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Calibri\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">The end of the study is reached. Thank you for your participation.</span> </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\"> </span> </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The study is not about the validity of a cognitive test. The true aim of this study is to investigate whether motor movement influences language comprehension and distance estimation. In this experiment are 4 groups: one groups that must move the object from the lower part of the screen to the upper part, and another group must move the object from the lower part of the screen to the upper part. This should stimulate either hand movement away or towards the body. On top of that, participants in one groups must decide which symbol he/she has to drag; this cognitive load should reduce the expected motor movement effects. This results will be compared to a group that must move the objects without cognitive load. </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">As this is an ongoing study, we ask of you to not talk about this study or share any of its contents. If you have any questions regarding this study, if you are interested in the results, or if you want to remove your data from the study, please contact: ResearcherX@ucl.ac.uk </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Thank you for your time and cooperation! </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Further Reading: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Glenberg, A. M., Sato, M., &amp; Cattaneo, L. (2008). <span style=\" font-style:italic;\">Use- induced motor plasticity affects the processing of abstract and concrete language.</span> <span style=\" font-style:italic;\">Current Biology, 18(7), pp. 290-291</span> </p></body></html>", None))
        self.terminateExp.setText(_translate("MainWindow", "Finish", None))

